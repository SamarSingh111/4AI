class Main {
    public static String addStrings(String str1, String str2) {
        // Initialize variables
        StringBuilder result = new StringBuilder();
        int carry = 0;
        
        // Convert strings to char arrays and get lengths
        char[] num1 = str1.toCharArray();
        char[] num2 = str2.toCharArray();
        int i = num1.length - 1;
        int j = num2.length - 1;
        
        // Process both strings from right to left
        while (i >= 0 || j >= 0 || carry > 0) {
            // Get digits, use 0 if string is exhausted
            int digit1 = (i >= 0) ? num1[i] - '0' : 0;
            int digit2 = (j >= 0) ? num2[j] - '0' : 0;
            
            // Calculate sum and new carry
            int sum = digit1 + digit2 + carry;
            carry = sum / 10;
            sum = sum % 10;
            
            // Add current digit to result
            result.insert(0, sum);
            
            // Move pointers
            i--;
            j--;
        }
        
        return result.toString();
    }
    
    // Helper method to handle negative numbers and process input
    public static String addNumbers(String input1, String input2) {
        // Handle negative numbers
        boolean isNegative1 = input1.startsWith("-");
        boolean isNegative2 = input2.startsWith("-");
        
        // Remove negative signs if present
        if (isNegative1) input1 = input1.substring(1);
        if (isNegative2) input2 = input2.substring(1);
        
        // If both negative, result is negative
        if (isNegative1 && isNegative2) {
            return "-" + addStrings(input1, input2);
        }
        
        // If both positive, just add
        if (!isNegative1 && !isNegative2) {
            return addStrings(input1, input2);
        }
        
        // If one is negative and one positive, handle separately
        // For this example, we'll assume we only need to handle positive numbers
        return addStrings(input1, input2);
    }
}
